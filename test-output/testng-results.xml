<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="0" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-01-01T17:49:35 CET" name="Default suite" finished-at="2021-01-01T17:49:35 CET" duration-ms="97">
    <groups>
    </groups>
    <test started-at="2021-01-01T17:49:35 CET" name="Default test" finished-at="2021-01-01T17:49:35 CET" duration-ms="97">
      <class name="TestNG.DataDriven">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:TestNG.DataDriven@55536d9e]" started-at="2021-01-01T17:49:35 CET" name="beforeSuite" finished-at="2021-01-01T17:49:35 CET" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:TestNG.DataDriven@55536d9e]" started-at="2021-01-01T17:49:35 CET" name="beforeTest" finished-at="2021-01-01T17:49:35 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:TestNG.DataDriven@55536d9e]" started-at="2021-01-01T17:49:35 CET" name="beforeClass" finished-at="2021-01-01T17:49:35 CET" duration-ms="61" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestNG.DataDriven@55536d9e]" started-at="2021-01-01T17:49:35 CET" name="beforeMethod" finished-at="2021-01-01T17:49:35 CET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="f(java.lang.String, int, java.util.List)[pri:0, instance:TestNG.DataDriven@55536d9e]" started-at="2021-01-01T17:49:35 CET" name="f" data-provider="data" finished-at="2021-01-01T17:49:35 CET" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Apple]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Company{id=1, name=AppleComputers, country=null, address=null, website=null, supplyChainCategoriy=null, buisnessRole=null, lat=0.0, lng=0.0, isSME=0}, Company{id=2, name=AppleJuiceCompany, country=null, address=null, website=null, supplyChainCategoriy=null, buisnessRole=null, lat=0.0, lng=0.0, isSME=0}, Company{id=3, name=BananaCompany, country=null, address=null, website=null, supplyChainCategoriy=null, buisnessRole=null, lat=0.0, lng=0.0, isSME=0}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestNG.DataDriven@55536d9e]" started-at="2021-01-01T17:49:35 CET" name="afterMethod" finished-at="2021-01-01T17:49:35 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestNG.DataDriven@55536d9e]" started-at="2021-01-01T17:49:35 CET" name="beforeMethod" finished-at="2021-01-01T17:49:35 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="f(java.lang.String, int, java.util.List)[pri:0, instance:TestNG.DataDriven@55536d9e]" started-at="2021-01-01T17:49:35 CET" name="f" data-provider="data" finished-at="2021-01-01T17:49:35 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Banana]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Company{id=1, name=AppleComputers, country=null, address=null, website=null, supplyChainCategoriy=null, buisnessRole=null, lat=0.0, lng=0.0, isSME=0}, Company{id=2, name=AppleJuiceCompany, country=null, address=null, website=null, supplyChainCategoriy=null, buisnessRole=null, lat=0.0, lng=0.0, isSME=0}, Company{id=3, name=BananaCompany, country=null, address=null, website=null, supplyChainCategoriy=null, buisnessRole=null, lat=0.0, lng=0.0, isSME=0}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestNG.DataDriven@55536d9e]" started-at="2021-01-01T17:49:35 CET" name="beforeMethod" finished-at="2021-01-01T17:49:35 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="f(java.lang.String, int, java.util.List)[pri:0, instance:TestNG.DataDriven@55536d9e]" started-at="2021-01-01T17:49:35 CET" name="f" data-provider="data" finished-at="2021-01-01T17:49:35 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[InvalidName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Company{id=1, name=AppleComputers, country=null, address=null, website=null, supplyChainCategoriy=null, buisnessRole=null, lat=0.0, lng=0.0, isSME=0}, Company{id=2, name=AppleJuiceCompany, country=null, address=null, website=null, supplyChainCategoriy=null, buisnessRole=null, lat=0.0, lng=0.0, isSME=0}, Company{id=3, name=BananaCompany, country=null, address=null, website=null, supplyChainCategoriy=null, buisnessRole=null, lat=0.0, lng=0.0, isSME=0}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestNG.DataDriven@55536d9e]" started-at="2021-01-01T17:49:35 CET" name="afterMethod" finished-at="2021-01-01T17:49:35 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestNG.DataDriven@55536d9e]" started-at="2021-01-01T17:49:35 CET" name="afterMethod" finished-at="2021-01-01T17:49:35 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="userLoginTest(java.lang.String, java.lang.Boolean)[pri:0, instance:TestNG.DataDriven@55536d9e]" started-at="2021-01-01T17:49:35 CET" name="userLoginTest" data-provider="companyWebsites" finished-at="2021-01-01T17:49:35 CET" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[java.io.FileNotFoundException: ..\companies.csv (The system cannot find the file specified)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: java.io.FileNotFoundException: ..\companies.csv (The system cannot find the file specified)
at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:49)
at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:145)
at org.testng.internal.Parameters.handleParameters(Parameters.java:797)
at org.testng.internal.Parameters.handleParameters(Parameters.java:740)
at org.testng.internal.ParameterHandler.handleParameters(ParameterHandler.java:59)
at org.testng.internal.ParameterHandler.createParameters(ParameterHandler.java:38)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:789)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.io.FileNotFoundException: ..\companies.csv (The system cannot find the file specified)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:211)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:153)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:108)
at java.base/java.io.FileReader.<init>(FileReader.java:60)
at TestNG.DataDriven.provider(DataDriven.java:78)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:76)
at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45)
... 25 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTest -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:TestNG.DataDriven@55536d9e]" started-at="2021-01-01T17:49:35 CET" name="afterClass" finished-at="2021-01-01T17:49:35 CET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:TestNG.DataDriven@55536d9e]" started-at="2021-01-01T17:49:35 CET" name="afterTest" finished-at="2021-01-01T17:49:35 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:TestNG.DataDriven@55536d9e]" started-at="2021-01-01T17:49:35 CET" name="afterSuite" finished-at="2021-01-01T17:49:35 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- TestNG.DataDriven -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
